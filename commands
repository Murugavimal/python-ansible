Commands used: 

pythooon -m venv .venv 
source .venv/bin/activate 

pip install fastapi[all] 

uvicorn myapp:app

----------day 3 --------------

install ansible 

pip install ansible 
install ansible and YAML extension in VSC

To save have the ssh public and private key binded and have no authentication prompt while doing SSH 

(.venv) rps@rps:~/Documents/python-ansible/Ansible-training$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/rps/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/rps/.ssh/id_rsa
Your public key has been saved in /home/rps/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:j1tdgYjTjrZGwjSEYPPMIivrMbyg+C6+7IaKuwgmf4w rps@rps
The key's randomart image is:
+---[RSA 3072]----+
|  +. ..          |
| . =..   o . .   |
|. . + o o o . .  |
| o . o . +     . |
|o     o S .   .  |
|o.     + + . .   |
|*= o    + o .    |
|#oE o  . o       |
|&&=.    .        |
+----[SHA256]-----+

ssh-copy-id -f "-o IdentityFile muruga-key.pem" ubuntu@ec2-54-186-169-45.us-west-2.compute.amazonaws.comBBBB
ssh -o ' IdentityFile muruga-key.pem' 'ubuntu@ec2-54-186-169-45.us-west-2.compute.amazonaws.com'

Command to verify ping status of servers in inventory.ini file
ansible -i inventory.ini -m ping all

ansible -i inventory.ini -m ping web

Inventory.ini 
[WEB]
ubuntu@ec2-54-184-190-105.us-west-2.compute.amazonaws.com
[DB]
ubuntu@ec2-54-186-169-45.us-west-2.compute.amazonaws.com



Create a path using Ansible : 

create  playbook.yml ---> refer file in git

 ansible-playbook -i inventory.ini playbook4.yml


ansible -i inventory.ini -m ping all 




    uvicorn app:app
    ansible-playbook -i inventory.ini playbook4.yml 
    ansible-playbook -i ../inventory.ini vault.yml 

    ansible-vault create group_vars/my_vault.yml
    ansible-vault view  group_vars/my_vault.yml
    ansible-playbook -i ../inventory.ini vault.yml 
    ansible-playbook -i ../inventory.ini vault.yml  -e @group_vars/my_vault.tml --ask-vault--pass
    ansible-playbook -i ../inventory.ini vault.yml  -e @group_vars/my_vault.tml --ask--vault--pass
    ansible-playbook -i ../inventory.ini vault.yml  -e @group_vars/my_vault.tml --ask-vault-pass
    
    ansible-playbook -i ../inventory.ini vault.yml  -e @group_vars/my_vault.yml --ask-vault-pass

  159  ansible-vaultrekey   group_vars/my_vault.yml
  160  ansible-vault rekey   group_vars/my_vault.yml
  161  openssl rand -base64 2048  
  162  openssl rand -base64 2048  > pass_file/ansible-vault.pass
  163  cat pass_file/ansible-vault.pass
  164  ansible-vault create   group_vars/my_vault_base64.yml --vault-password-file=pass_file/ansible-vault.pass
  165  ansible-vault view   group_vars/my_vault_base64.yml --vault-password-file=pass_file/ansible-vault.pass
  166  ansible-playbook -i ../inventory.ini vault.yml  -e @group_vars/my_vault.yml --vault-password-file=pass_file/ansible-vault.pass
  167  ansible-playbook -i ../inventory.ini vault.yml  -e @group_vars/my_vault_base64.yml --vault-password-file=pass_file/ansible-vault.pass
  168  history
